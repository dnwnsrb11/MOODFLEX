"""
Django settings for movie_manage project.

Generated by 'django-admin startproject' using Django 4.2.15.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-aff9@=9^!4=ynem1=mz+_(u-p%5fg+7-u*(+mxg=1hx^2!=i^)'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'movies',
    'accounts',
    'chatbot',
    'rest_framework',
    'rest_framework.authtoken',
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_spectacular',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

CORS_ALLOWED_ORIGINS = [
    'http://127.0.0.1:5173',
    'http://localhost:5173',
]

CORS_ALLOW_CREDENTIALS = True



REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.TokenAuthentication',  # 추가
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_SCHEMA_CLASS': 'drf_spectacular.openapi.AutoSchema',
}

SPECTACULAR_SETTINGS = {
    'TITLE': 'Emovie',  # API 문서 제목
    'DESCRIPTION': '감성영화의 API에 대한 문서',
    'VERSION': '1.0.0',
    'SERVE_INCLUDE_SCHEMA': False,  # /schema/ 엔드포인트에서 JSON 스키마를 포함하지 않음 (필요시 True로 변경)
}

ROOT_URLCONF = 'movie_manage.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'movie_manage.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

DATABASES = {
    'default': {
    # PostgreSQL
        # 'ENGINE': 'django.db.backends.postgresql',
        # 'NAME': 'emotional_movie_db',
        # 'USER': 'postgres',
        # 'PASSWORD': 'admin11',
        # 'HOST': 'localhost',
        # 'PORT': '5432',
    # sqlite3
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}
'''
PostgreSQL에서 한자 깨질 때
- 기존 데이터 디렉토리 (...\Program Files\PostgreSQL\17\data)
  에서 data 폴더 삭제(필요시 백업)
- 윈도우 기준 PowerShell 관리자 권한 실행하여 아래 명령어 치기
  initdb -D "C:\Program Files\PostgreSQL\<버전>\data" --locale=ko_KR.UTF-8 -E UTF8
- 만약 권한 오류가 뜨면 PowerShell에 다음 명령어 순차적으로 입력하고 다시 initdb 실행
    - mkdir "C:/Program Files/PostgreSQL/17/data"
    - icacls "C:/Program Files/PostgreSQL/17/data" /grant Everyone:F /T

CREATE DATABASE emotional_movie_db
WITH 
OWNER = postgres
ENCODING = 'UTF8'
LC_COLLATE = 'ko_KR.UTF-8'
LC_CTYPE = 'ko_KR.UTF-8'
TEMPLATE = template0;

postreSQL의 터미널 psql 간단한 명령어

\l: 현재 서버에 있는 모든 데이터베이스 목록 [조회]
\c database_name: 지정한 데이터베이스 [접속]
\d: 현재 데이터베이스에 있는 모든 테이블, 뷰, 시퀀스, 인덱스 등의 목록 [조회]
\dt: 현재 데이터베이스에 있는 모든 테이블의 목록 [조회]
\dv: 현재 데이터베이스에 있는 모든 뷰의 목록 [조회]
\di: 현재 데이터베이스에 있는 모든 인덱스의 목록 [조회]
\q: psql 클라이언트 [종료]
'''

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'